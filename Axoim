local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Axoim",
   LoadingTitle = "Axoim",
   LoadingSubtitle = "By Wuhaz",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Project Axoim"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
      KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Axoim Key System",
      Subtitle = "Key System",
      Note = "Key is Axoim2024",
      FileName = "AxoimKeysystem", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Axoim2024"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

Rayfield:Notify({
   Title = "Thank You For Using Axoim",
   Content = "Made by wuhaz with ❤️ ",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Your Welcome!",
         Callback = function()
         print("The user tapped Yes Babe!")
      end
   },
},
})
local Tab = Window:CreateTab("Home", 4483362458) -- Title, Image
local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 250},
   Increment = 16,
   Suffix = "WalkSpeed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(v)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
      -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})


local Slider = Tab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 500},
   Increment = 10,
   Suffix = "JumpPower",
   CurrentValue = 10,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(v)
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
      -- The variable (Value) is a number which correlates to the value the slider is currently at
   end,
})
local Button = Tab:CreateButton({
   Name = "Inf Jump",
   Callback = function()
   local InfiniteJumpEnabled = true
        game:GetService("UserInputService").JumpRequest:connect(function()
            if InfiniteJumpEnabled then
                game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
            end
        end)
   end,
})
local Button = Tab:CreateButton({
   Name = "Fly",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()
   end,
})
local Tab = Window:CreateTab("Visuals", 4483362458) -- Title, Image
local Section = Tab:CreateSection("ESP")
local Button = Tab:CreateButton({
   Name = "Character ESP",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/Lucasfin000/SpaceHub/main/UESP'))()
   end,
})
local Button = Tab:CreateButton({
   Name = "Line ESP",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/wuhaz/scripts/main/as", true))()
   end,
})
